START:
LDA 2000H
MOV H,A

;X | Y | AND | OR | NAND | NOR
;0 | 0 | 0   | 0  | 1    | 1
;0 | 1 | 0   | 1  | 1    | 0
;1 | 0 | 0   | 1  | 1    | 0	
;1 | 1 | 1   | 1  | 0    | 0	

GATE1_NAND:		
ANI 03H		
CPI 03H		;COMPARE WITH 0000 0011
JZ ZERO_NAND_1	;BOTH BITS = 1 THEN 0 
MVI B,01H		;ELSE 1
JMP GATE2_NAND

ZERO_nAND_1:
MVI B,00H

GATE2_NAND:
MOV A,H
ANI 0CH
CPI 0CH		;COMPARE WITH 0000 1100
JZ ZERO_nAND_2	;BOTH BITS = 1 THEN 0 
MVI C,02H		;ELSE 1 -> IN THE RIGHT POSITION 1 -> 2
JMP GATE3_NOR

ZERO_NAND_2:
MVI C,00H

GATE3_NOR:
MOV A,H
ANI 30H
CPI 00H		;COMPARE WITH 0000 0000
JNZ ZERO_NOR_1	;BOTH BITS != 0 THEN 0
MVI D,04H		;ELSE 1 -> IN THE RIGHT POSITION 1 -> 4
JMP GATE4_NOR

ZERO_NOR_1:
MVI D,00H

GATE4_NOR:
MOV A,H
ANI C0H
CPI 00H		;COMPARE WITH 0000 0000
JNZ ZERO_NOR_2	;BOTH BITS != 0 THEN 0
MVI E,08H		;ELSE 1 -> IN THE RIGHT POSITION 1 -> 8
JMP FINALLY

ZERO_NOR_2:
MVI E,00H

FINALLY:
SUB A		;SET A = 0
ADD B
ADD C
ADD D
ADD E
ANI 0FH
CMA
STA 3000H
JMP START

END

